        <ol class="nested">
            <li>
                What is the difference between a function declaration and a function definition?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q1" value="a">
                the declaration includes the function body, while the definition just gives the functions return and parameter types
                </li>
                <li>
                <input type="radio" name="q1" value="b">
                the declaration just gives the functions return and parameter types, while the definition includes the function body
                </li>
            </ol>
            <li>
                What are header files used for?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q2" value="a">
                To head off disaster.
                </li>
                <li>
                <input type="radio" name="q2" value="b">
                To put a nice header at the top of your code if you print it.
                </li>
                <li>
                <input type="radio" name="q2" value="c">
                To provide declarations needed for multiple source code files.
                </li>
            </ol>
            <li>
                Is int a; a definition or just a declaration?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q3" value="a">
                Declaration Only
                </li>
                <li>
                <input type="radio" name="q3" value="b">
                Declaration as well as Definition
                </li>
                <li>
                <input type="radio" name="q3" value="c">
                Definition Only
                </li>
            </ol>
            <li>
                It is always a good idea to initialize variables as they are declared because …
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q4" value="a">
                it's initial value is indeterminate
                </li>
                <li>
                <input type="radio" name="q4" value="b">
                it’s initial value is empty
                </li>
            </ol>
            <li>
                The function declaration consists of …
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q5" value="a">
                function name, return type and parameter list
                </li>
                <li>
                <input type="radio" name="q5" value="b">
                function body and parameter list
                </li>
                <li>
                <input type="radio" name="q5" value="c">
                function name and parameter list
                </li>
            </ol>
            <li>
                Which of the following is not a type of scope?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q6" value="a">
                Namespace Scope
                </li>
                <li>
                <input type="radio" name="q6" value="b">
                Declaration Scope
                </li>
                <li>
                <input type="radio" name="q6" value="c">
                Class Scope
                </li>
                <li>
                <input type="radio" name="q6" value="d">
                Global Scope
                </li>
            </ol>
            <li>
                Passing by reference means …
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q7" value="a">
                parameter will be the same as the callers' passed argument (not the value, but the identity - the variable itself)
                </li>
                <li>
                <input type="radio" name="q7" value="b">
                the called functions' parameter will be a copy of the callers' passed argument
                </li>
            </ol>
            <li>
                Passing by value means …
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q8" value="a">
                parameter will be the same as the callers' passed argument (not the value, but the identity - the variable itself)
                </li>
                <li>
                <input type="radio" name="q8" value="b">
                the called functions' parameter will be a copy of the callers' passed argument
                </li>
            </ol>
        </ol>
        <details>
            <summary class="sum3">
                Answers
            </summary>
            <p>
                1. b; 2. c; 3. a; 4. a; 5. a; 6. b; 7. a; 8. b;
            </p>
        </details>
